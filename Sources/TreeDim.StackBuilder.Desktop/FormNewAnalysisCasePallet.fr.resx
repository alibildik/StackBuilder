<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lbBox.Size" type="System.Drawing.Size, System.Drawing">
    <value>38, 13</value>
  </data>
  <data name="lbBox.Text" xml:space="preserve">
    <value>Caisse</value>
  </data>
  <data name="uCtrlOverhang.Text" xml:space="preserve">
    <value>Débord</value>
  </data>
  <data name="lbPallet.Size" type="System.Drawing.Size, System.Drawing">
    <value>40, 13</value>
  </data>
  <data name="lbPallet.Text" xml:space="preserve">
    <value>Palette</value>
  </data>
  <data name="checkBoxBestLayersOnly.Size" type="System.Drawing.Size, System.Drawing">
    <value>216, 17</value>
  </data>
  <data name="checkBoxBestLayersOnly.Text" xml:space="preserve">
    <value>Afficher les meilleurs couches seulement</value>
  </data>
  <data name="bnBestCombination.Text" xml:space="preserve">
    <value>Meilleure combinaison &gt;</value>
  </data>
  <data name="uCtrlOptMaxNumber.Text" xml:space="preserve">
    <value>Nombre maximum</value>
  </data>
  <data name="uCtrlOptMaximumWeight.Text" xml:space="preserve">
    <value>Poid maximum palette</value>
  </data>
  <data name="uCtrlMaximumHeight.Text" xml:space="preserve">
    <value>Hauteur maximale palette</value>
  </data>
  <data name="tabPageStopCriterions.Text" xml:space="preserve">
    <value>Critères arrêt</value>
  </data>
  <data name="tabPageOverhang.Text" xml:space="preserve">
    <value>Débord</value>
  </data>
  <data name="uCtrlOptSpace.Text" xml:space="preserve">
    <value>Espace</value>
  </data>
  <data name="tabPageSpaces.Text" xml:space="preserve">
    <value>Espace</value>
  </data>
  <data name="lbSelect.Size" type="System.Drawing.Size, System.Drawing">
    <value>291, 13</value>
  </data>
  <data name="lbSelect.Text" xml:space="preserve">
    <value>Sélectionner une ou plusieurs couche(s) et cliquer 'Suivant&gt;'</value>
  </data>
  <data name="bnEditLayerRight.Text" xml:space="preserve">
    <value>Modifier...</value>
  </data>
  <data name="bnEditLayer.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAvZJREFUWEfFl1tPE1EQx/eb+Rk0fgPxhuIFASniA4nGxDcV47OxD6hUWkCi+KBB
        H0xULr3Y1sgLKgm8aDDBC5Rxfofdut3utme3oP9kSOnObef8Z87UkRiorm1IrrAqoy+XZeRJWS5OFoyM
        PC3L6NyyeVZRnThom8BWbUfSb1bk+IMFOTW+KOcmluRCLi/9GnhgsmiEz3zHM3TQvfd2RW1rrpdotEwg
        m1+VrrF543iAt50qWgm62GA7kf/iegtHZAJD0yU5nVmMFTgo2OIjNV2UHddvEE0JbP7elm4tY282H+o0
        ieCre3zB+A6iKQEU+3Lt35pz77fQ8wSf3Q8XZCdQioYEhh6XrN68L7skw1N5GZ55Lz0Z5UeITpjgO6VH
        60c9AQjHeYUZ+mVwpiKHr6VdK5GMkuyoks2WK8SYKPwlpklgW1sNxto4SWkCB6/cNcYe6P1j9+e1Fdvb
        E4NYXouaBNLas7RNmEFQSODQ1cYEwK/tmuHF2Uft/RCLmMAkwOCwLWFUAh5u6kQ8qWRr5Y9nxAROdX3D
        TK8GJSVKr044lCitX05kCnJg8I4xjsKz6pocGXtnKtLg1yfErGhsh/ndUH4N3jP2Wq5nXrjukuHzt01t
        u+h5QkxiO1wszHHvQZDlneKytuqZEF4Q85bGdrjV/KUKY3mnuP1qWc4HKkFMYjv84ydMO5IlBXzyYtRj
        qvz/BP7FEcCzyCPYfxKWIklIbCdXjGrD566LZPj0dVMHkkUbflj/HjGISokH0awOoi6LQcSOueej+Mbc
        x3ijmD97cRn93Ip5GemiC9zruNbRdVxOdB3vrkYmAQAhEi0ki/EXEpYfD/UEQNyV7JLqx13JiOFHQwKA
        jXjfllJdeINoSuCHrs60iE0lbAVfvJjVWu6BUnFetmcbJtjigx85UYhMAEBMGEvbxEkEXWywzaqPVmiZ
        AGBjZk4wODgaHDPH4QCBED7zHc/QQRcbr9VaoW0CflR1bFOV+s/zKaqye6vxHc/QsYfIH/S4gWeTTnTU
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="bnEditLayer.Text" xml:space="preserve">
    <value>Editer la couche sélectionnée</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Créer une nouvelle analyse caisse/palette...</value>
  </data>
</root>